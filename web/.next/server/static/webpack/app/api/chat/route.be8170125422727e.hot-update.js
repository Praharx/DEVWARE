"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/api/chat/route",{

/***/ "(rsc)/./src/app/api/chat/route.ts":
/*!***********************************!*\
  !*** ./src/app/api/chat/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ai */ \"(rsc)/./node_modules/ai/dist/index.mjs\");\n/* harmony import */ var _langchain_openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/openai */ \"(rsc)/./node_modules/@langchain/openai/index.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var langchain_output_parsers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! langchain/output_parsers */ \"(rsc)/./node_modules/langchain/output_parsers.js\");\n\n\n\n\n\nconst runtime = \"edge\";\nconst formatMessage = (message)=>{\n    return `${message.role}: ${message.content}`;\n};\nconst TEMPLATE = `You are very curious person, and are interested in technology. Based on the answers that the user gives to you, create more questions, which tries to extract more info about their experience in tech\nmake sure to be contextually relatable from the chat conversatoin history provided, and try to be genuine and give them a questions that they would geneuinely like to answer about their experience so far in tech\n\nNote:-\n1. If the user is a beginner, try to ask questions that really intrigue them, and not let them feel that down for their lack of experience.\n2. if the user is intermediate, ask them about their day to day work, what kind of things make them curious, and what would they like to persue in the long run\n3. if they're experience, talk about what do they specialize in, what's their experience so far in tech, and what kind of character have they been able to create so far\n4. Only reply with the question, nothing else\n\nCurrent conversation:\n{chat_history}\n\nUser: {input}\nAI:`;\n/**\n * This handler initializes and calls a simple chain with a prompt,\n * chat model, and output parser. See the docs for more information:\n *\n * https://js.langchain.com/docs/guides/expression_language/cookbook#prompttemplate--llm--outputparser\n */ async function POST(req) {\n    try {\n        const body = await req.json();\n        const messages = body.messages ?? [];\n        const formattedPreviousMessages = messages.slice(0, -1).map(formatMessage);\n        const currentMessageContent = messages[messages.length - 1].content;\n        const prompt = _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__.PromptTemplate.fromTemplate(TEMPLATE);\n        /**\n     * You can also try e.g.:\n     *\n     * import { ChatAnthropic } from \"langchain/chat_models/anthropic\";\n     * const model = new ChatAnthropic({});\n     *\n     * See a full list of supported models at:\n     * https://js.langchain.com/docs/modules/model_io/models/\n     */ const model = new _langchain_openai__WEBPACK_IMPORTED_MODULE_1__.ChatOpenAI({\n            temperature: 0.8,\n            modelName: \"gpt-3.5-turbo-1106\"\n        });\n        /**\n     * Chat models stream message chunks rather than bytes, so this\n     * output parser handles serialization and byte-encoding.\n     */ const outputParser = new langchain_output_parsers__WEBPACK_IMPORTED_MODULE_3__.HttpResponseOutputParser();\n        /**\n     * Can also initialize as:\n     *\n     * import { RunnableSequence } from \"@langchain/core/runnables\";\n     * const chain = RunnableSequence.from([prompt, model, outputParser]);\n     */ const chain = prompt.pipe(model).pipe(outputParser);\n        const stream = await chain.stream({\n            chat_history: formattedPreviousMessages.join(\"\\n\"),\n            input: currentMessageContent\n        });\n        return new ai__WEBPACK_IMPORTED_MODULE_4__.StreamingTextResponse(stream);\n    } catch (e) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: e.message\n        }, {\n            status: e.status ?? 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9jaGF0L3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0Q7QUFDaUI7QUFFMUI7QUFDVTtBQUNXO0FBRTdELE1BQU1LLFVBQVUsT0FBTztBQUU5QixNQUFNQyxnQkFBZ0IsQ0FBQ0M7SUFDckIsT0FBTyxDQUFDLEVBQUVBLFFBQVFDLElBQUksQ0FBQyxFQUFFLEVBQUVELFFBQVFFLE9BQU8sQ0FBQyxDQUFDO0FBQzlDO0FBRUEsTUFBTUMsV0FBVyxDQUFDOzs7Ozs7Ozs7Ozs7O0dBYWYsQ0FBQztBQUVKOzs7OztDQUtDLEdBQ00sZUFBZUMsS0FBS0MsR0FBZ0I7SUFDekMsSUFBSTtRQUNGLE1BQU1DLE9BQU8sTUFBTUQsSUFBSUUsSUFBSTtRQUMzQixNQUFNQyxXQUFXRixLQUFLRSxRQUFRLElBQUksRUFBRTtRQUNwQyxNQUFNQyw0QkFBNEJELFNBQVNFLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBR0MsR0FBRyxDQUFDWjtRQUM1RCxNQUFNYSx3QkFBd0JKLFFBQVEsQ0FBQ0EsU0FBU0ssTUFBTSxHQUFHLEVBQUUsQ0FBQ1gsT0FBTztRQUNuRSxNQUFNWSxTQUFTbEIsbUVBQWNBLENBQUNtQixZQUFZLENBQUNaO1FBRTNDOzs7Ozs7OztLQVFDLEdBQ0QsTUFBTWEsUUFBUSxJQUFJckIseURBQVVBLENBQUM7WUFDM0JzQixhQUFhO1lBQ2JDLFdBQVc7UUFDYjtRQUVBOzs7S0FHQyxHQUNELE1BQU1DLGVBQWUsSUFBSXRCLDhFQUF3QkE7UUFFakQ7Ozs7O0tBS0MsR0FDRCxNQUFNdUIsUUFBUU4sT0FBT08sSUFBSSxDQUFDTCxPQUFPSyxJQUFJLENBQUNGO1FBRXRDLE1BQU1HLFNBQVMsTUFBTUYsTUFBTUUsTUFBTSxDQUFDO1lBQ2hDQyxjQUFjZCwwQkFBMEJlLElBQUksQ0FBQztZQUM3Q0MsT0FBT2I7UUFDVDtRQUVBLE9BQU8sSUFBSWxCLHFEQUFxQkEsQ0FBQzRCO0lBQ25DLEVBQUUsT0FBT0ksR0FBUTtRQUNmLE9BQU9qQyxrRkFBWUEsQ0FBQ2MsSUFBSSxDQUFDO1lBQUVvQixPQUFPRCxFQUFFMUIsT0FBTztRQUFDLEdBQUc7WUFBRTRCLFFBQVFGLEVBQUVFLE1BQU0sSUFBSTtRQUFJO0lBQzNFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9hcGkvY2hhdC9yb3V0ZS50cz80NmI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IE1lc3NhZ2UgYXMgVmVyY2VsQ2hhdE1lc3NhZ2UsIFN0cmVhbWluZ1RleHRSZXNwb25zZSB9IGZyb20gXCJhaVwiO1xuXG5pbXBvcnQgeyBDaGF0T3BlbkFJIH0gZnJvbSBcIkBsYW5nY2hhaW4vb3BlbmFpXCI7XG5pbXBvcnQgeyBQcm9tcHRUZW1wbGF0ZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuaW1wb3J0IHsgSHR0cFJlc3BvbnNlT3V0cHV0UGFyc2VyIH0gZnJvbSBcImxhbmdjaGFpbi9vdXRwdXRfcGFyc2Vyc1wiO1xuXG5leHBvcnQgY29uc3QgcnVudGltZSA9IFwiZWRnZVwiO1xuXG5jb25zdCBmb3JtYXRNZXNzYWdlID0gKG1lc3NhZ2U6IFZlcmNlbENoYXRNZXNzYWdlKSA9PiB7XG4gIHJldHVybiBgJHttZXNzYWdlLnJvbGV9OiAke21lc3NhZ2UuY29udGVudH1gO1xufTtcblxuY29uc3QgVEVNUExBVEUgPSBgWW91IGFyZSB2ZXJ5IGN1cmlvdXMgcGVyc29uLCBhbmQgYXJlIGludGVyZXN0ZWQgaW4gdGVjaG5vbG9neS4gQmFzZWQgb24gdGhlIGFuc3dlcnMgdGhhdCB0aGUgdXNlciBnaXZlcyB0byB5b3UsIGNyZWF0ZSBtb3JlIHF1ZXN0aW9ucywgd2hpY2ggdHJpZXMgdG8gZXh0cmFjdCBtb3JlIGluZm8gYWJvdXQgdGhlaXIgZXhwZXJpZW5jZSBpbiB0ZWNoXG5tYWtlIHN1cmUgdG8gYmUgY29udGV4dHVhbGx5IHJlbGF0YWJsZSBmcm9tIHRoZSBjaGF0IGNvbnZlcnNhdG9pbiBoaXN0b3J5IHByb3ZpZGVkLCBhbmQgdHJ5IHRvIGJlIGdlbnVpbmUgYW5kIGdpdmUgdGhlbSBhIHF1ZXN0aW9ucyB0aGF0IHRoZXkgd291bGQgZ2VuZXVpbmVseSBsaWtlIHRvIGFuc3dlciBhYm91dCB0aGVpciBleHBlcmllbmNlIHNvIGZhciBpbiB0ZWNoXG5cbk5vdGU6LVxuMS4gSWYgdGhlIHVzZXIgaXMgYSBiZWdpbm5lciwgdHJ5IHRvIGFzayBxdWVzdGlvbnMgdGhhdCByZWFsbHkgaW50cmlndWUgdGhlbSwgYW5kIG5vdCBsZXQgdGhlbSBmZWVsIHRoYXQgZG93biBmb3IgdGhlaXIgbGFjayBvZiBleHBlcmllbmNlLlxuMi4gaWYgdGhlIHVzZXIgaXMgaW50ZXJtZWRpYXRlLCBhc2sgdGhlbSBhYm91dCB0aGVpciBkYXkgdG8gZGF5IHdvcmssIHdoYXQga2luZCBvZiB0aGluZ3MgbWFrZSB0aGVtIGN1cmlvdXMsIGFuZCB3aGF0IHdvdWxkIHRoZXkgbGlrZSB0byBwZXJzdWUgaW4gdGhlIGxvbmcgcnVuXG4zLiBpZiB0aGV5J3JlIGV4cGVyaWVuY2UsIHRhbGsgYWJvdXQgd2hhdCBkbyB0aGV5IHNwZWNpYWxpemUgaW4sIHdoYXQncyB0aGVpciBleHBlcmllbmNlIHNvIGZhciBpbiB0ZWNoLCBhbmQgd2hhdCBraW5kIG9mIGNoYXJhY3RlciBoYXZlIHRoZXkgYmVlbiBhYmxlIHRvIGNyZWF0ZSBzbyBmYXJcbjQuIE9ubHkgcmVwbHkgd2l0aCB0aGUgcXVlc3Rpb24sIG5vdGhpbmcgZWxzZVxuXG5DdXJyZW50IGNvbnZlcnNhdGlvbjpcbntjaGF0X2hpc3Rvcnl9XG5cblVzZXI6IHtpbnB1dH1cbkFJOmA7XG5cbi8qKlxuICogVGhpcyBoYW5kbGVyIGluaXRpYWxpemVzIGFuZCBjYWxscyBhIHNpbXBsZSBjaGFpbiB3aXRoIGEgcHJvbXB0LFxuICogY2hhdCBtb2RlbCwgYW5kIG91dHB1dCBwYXJzZXIuIFNlZSB0aGUgZG9jcyBmb3IgbW9yZSBpbmZvcm1hdGlvbjpcbiAqXG4gKiBodHRwczovL2pzLmxhbmdjaGFpbi5jb20vZG9jcy9ndWlkZXMvZXhwcmVzc2lvbl9sYW5ndWFnZS9jb29rYm9vayNwcm9tcHR0ZW1wbGF0ZS0tbGxtLS1vdXRwdXRwYXJzZXJcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxOiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXEuanNvbigpO1xuICAgIGNvbnN0IG1lc3NhZ2VzID0gYm9keS5tZXNzYWdlcyA/PyBbXTtcbiAgICBjb25zdCBmb3JtYXR0ZWRQcmV2aW91c01lc3NhZ2VzID0gbWVzc2FnZXMuc2xpY2UoMCwgLTEpLm1hcChmb3JtYXRNZXNzYWdlKTtcbiAgICBjb25zdCBjdXJyZW50TWVzc2FnZUNvbnRlbnQgPSBtZXNzYWdlc1ttZXNzYWdlcy5sZW5ndGggLSAxXS5jb250ZW50O1xuICAgIGNvbnN0IHByb21wdCA9IFByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShURU1QTEFURSk7XG5cbiAgICAvKipcbiAgICAgKiBZb3UgY2FuIGFsc28gdHJ5IGUuZy46XG4gICAgICpcbiAgICAgKiBpbXBvcnQgeyBDaGF0QW50aHJvcGljIH0gZnJvbSBcImxhbmdjaGFpbi9jaGF0X21vZGVscy9hbnRocm9waWNcIjtcbiAgICAgKiBjb25zdCBtb2RlbCA9IG5ldyBDaGF0QW50aHJvcGljKHt9KTtcbiAgICAgKlxuICAgICAqIFNlZSBhIGZ1bGwgbGlzdCBvZiBzdXBwb3J0ZWQgbW9kZWxzIGF0OlxuICAgICAqIGh0dHBzOi8vanMubGFuZ2NoYWluLmNvbS9kb2NzL21vZHVsZXMvbW9kZWxfaW8vbW9kZWxzL1xuICAgICAqL1xuICAgIGNvbnN0IG1vZGVsID0gbmV3IENoYXRPcGVuQUkoe1xuICAgICAgdGVtcGVyYXR1cmU6IDAuOCxcbiAgICAgIG1vZGVsTmFtZTogXCJncHQtMy41LXR1cmJvLTExMDZcIixcbiAgICB9KTtcblxuICAgIC8qKlxuICAgICAqIENoYXQgbW9kZWxzIHN0cmVhbSBtZXNzYWdlIGNodW5rcyByYXRoZXIgdGhhbiBieXRlcywgc28gdGhpc1xuICAgICAqIG91dHB1dCBwYXJzZXIgaGFuZGxlcyBzZXJpYWxpemF0aW9uIGFuZCBieXRlLWVuY29kaW5nLlxuICAgICAqL1xuICAgIGNvbnN0IG91dHB1dFBhcnNlciA9IG5ldyBIdHRwUmVzcG9uc2VPdXRwdXRQYXJzZXIoKTtcblxuICAgIC8qKlxuICAgICAqIENhbiBhbHNvIGluaXRpYWxpemUgYXM6XG4gICAgICpcbiAgICAgKiBpbXBvcnQgeyBSdW5uYWJsZVNlcXVlbmNlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9ydW5uYWJsZXNcIjtcbiAgICAgKiBjb25zdCBjaGFpbiA9IFJ1bm5hYmxlU2VxdWVuY2UuZnJvbShbcHJvbXB0LCBtb2RlbCwgb3V0cHV0UGFyc2VyXSk7XG4gICAgICovXG4gICAgY29uc3QgY2hhaW4gPSBwcm9tcHQucGlwZShtb2RlbCkucGlwZShvdXRwdXRQYXJzZXIpO1xuXG4gICAgY29uc3Qgc3RyZWFtID0gYXdhaXQgY2hhaW4uc3RyZWFtKHtcbiAgICAgIGNoYXRfaGlzdG9yeTogZm9ybWF0dGVkUHJldmlvdXNNZXNzYWdlcy5qb2luKFwiXFxuXCIpLFxuICAgICAgaW5wdXQ6IGN1cnJlbnRNZXNzYWdlQ29udGVudCxcbiAgICB9KTtcblxuICAgIHJldHVybiBuZXcgU3RyZWFtaW5nVGV4dFJlc3BvbnNlKHN0cmVhbSk7XG4gIH0gY2F0Y2ggKGU6IGFueSkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBlLm1lc3NhZ2UgfSwgeyBzdGF0dXM6IGUuc3RhdHVzID8/IDUwMCB9KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIlN0cmVhbWluZ1RleHRSZXNwb25zZSIsIkNoYXRPcGVuQUkiLCJQcm9tcHRUZW1wbGF0ZSIsIkh0dHBSZXNwb25zZU91dHB1dFBhcnNlciIsInJ1bnRpbWUiLCJmb3JtYXRNZXNzYWdlIiwibWVzc2FnZSIsInJvbGUiLCJjb250ZW50IiwiVEVNUExBVEUiLCJQT1NUIiwicmVxIiwiYm9keSIsImpzb24iLCJtZXNzYWdlcyIsImZvcm1hdHRlZFByZXZpb3VzTWVzc2FnZXMiLCJzbGljZSIsIm1hcCIsImN1cnJlbnRNZXNzYWdlQ29udGVudCIsImxlbmd0aCIsInByb21wdCIsImZyb21UZW1wbGF0ZSIsIm1vZGVsIiwidGVtcGVyYXR1cmUiLCJtb2RlbE5hbWUiLCJvdXRwdXRQYXJzZXIiLCJjaGFpbiIsInBpcGUiLCJzdHJlYW0iLCJjaGF0X2hpc3RvcnkiLCJqb2luIiwiaW5wdXQiLCJlIiwiZXJyb3IiLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/chat/route.ts\n");

/***/ })

});